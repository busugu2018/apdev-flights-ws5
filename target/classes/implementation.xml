<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:ws="http://www.mulesoft.org/schema/mule/ws" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd">
	<ws:consumer-config name="Delta_Web_Service_Consumer" wsdlLocation="http://mu.mulesoft-training.com/essentials/delta?wsdl" service="TicketServiceService" port="TicketServicePort" serviceAddress="http://mu.mulesoft-training.com/essentials/delta" doc:name="Web Service Consumer"/>
	<flow name="getFF">
		<http:listener config-ref="HTTP_Listener_Configuration" path="/flights" allowedMethods="GET" doc:name="HTTP"/>
		<set-variable variableName="airline" value="#[message.inboundProperties.'http.query.params'.airline]" doc:name="Set Airline Variable"/>
		<flow-ref name="setCodeVariable" doc:name="setCodeVariable"/>
		<choice doc:name="Choice">
			<when expression="#[flowVars.airline==&quot;united&quot;]">
				<flow-ref name="getUnitedFF" doc:name="getUnitedFF"/>
			</when>
			<when expression="#[flowVars.airline==&quot;American&quot;]">
				<flow-ref name="getAmericanFF" doc:name="getAmericanFF"/>
			</when>
			<when expression="#[flowVars.airline==&quot;delta&quot;]">
				<flow-ref name="getDeltaFF" doc:name="getDeltaFF"/>
			</when>
			<otherwise>
				<flow-ref name="getAllAirlineFF" doc:name="getAllAirlineFF"/>
			</otherwise>
		</choice>
		<dw:transform-message doc:name="Transform Message">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload orderBy $.price]]></dw:set-payload>
		</dw:transform-message>
		<logger level="INFO" doc:name="Logger"/>

	</flow>
	<sub-flow name="setCodeVariable">
		<set-variable variableName="code" value="#[(message.inboundProperties.'http.query.params'.code==empty)? 'SFO': message.inboundProperties.'http.query.params'.code]" doc:name="Variable"/>
	</sub-flow>
	<flow name="getUnitedFF">
		<http:request config-ref="United_REST_HTTP_Request_Configuration" path="/essentials/united/flights/{destination}" method="GET" doc:name="United REST Request">
			<http:request-builder>
				<http:uri-param paramName="destination" value="#[flowVars.code]"/>
			</http:request-builder>
		</http:request>
		<dw:transform-message doc:name="Transform Message" metadata:id="f28b92ad-85fc-485a-b95f-b4d10d725d9c">
			<dw:input-payload mimeType="application/json"/>
			<dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload.flights map ((flight , indexOfFlight) -> {
	airline: flight.airlineName,
	flightCode: flight.code,
	fromAirportCode: flight.origin,
	toAirportCode: flight.destination,
	departureDate: flight.departureDate,
	emptySeats: flight.emptySeats,
	price: flight.price,
	planeType: flight.planeType
})]]></dw:set-payload>
		</dw:transform-message>
		<logger level="INFO" doc:name="Logger"/>
	</flow>
	<flow name="getAmericanFF">
		<http:request config-ref="American_HTTP_Request_Configuration" path="/flights" method="GET" doc:name="American REST Request">
			<http:request-builder>
				<http:query-param paramName="destination" value="#[flowVars.code]"/>
			</http:request-builder>
		</http:request>
		<dw:transform-message doc:name="Transform Message" metadata:id="cb6053c7-012a-460c-adce-4e1b61901fda">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload map ((payload01 , indexOfPayload01) -> {
	airline: "American",
	flightCode: payload01.code,
	fromAirportCode: payload01.origin,
	toAirportCode: payload01.destination,
	departureDate: payload01.departureDate,
	emptySeats: payload01.emptySeats,
	totalSeats: payload01.plane.totalSeats,
	price: payload01.price,
	planeType: payload01.plane.type
})]]></dw:set-payload>
		</dw:transform-message>
	</flow>
	<flow name="getDeltaFF">
		<dw:transform-message doc:name="Transform Message">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 http://soap.training.mulesoft.com/
---
{
	ns0#findFlight: {
		destination: flowVars.code as :string
	}
}]]></dw:set-payload>
		</dw:transform-message>
		<ws:consumer config-ref="D_Web_Service_Consumer" operation="findFlight" doc:name="Web Service Consumer"/>
		<dw:transform-message doc:name="Transform Message" metadata:id="dc1ce0cd-85c0-4394-9f7e-09ee0f6c6de1">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/json
%namespace ns0 http://soap.training.mulesoft.com/
---
payload.ns0#findFlightResponse.*return map ((return , indexOfReturn) -> {
	airline: return.airlineName,
	flightCode: return.code,
	fromAirportCode: return.origin,
	toAirportCode: return.destination,
	departureDate: return.departureDate,
	emptySeats: return.emptySeats,
	price: return.price,
	planeType: return.planeType
})]]></dw:set-payload>
		</dw:transform-message>
		<logger level="INFO" doc:name="Logger"/>
	</flow>
	<flow name="getAllAirlineFF">
		<scatter-gather doc:name="Scatter-Gather">
			<flow-ref name="getDeltaFF" doc:name="getDeltaFF"/>
			<flow-ref name="getUnitedFF" doc:name="getUnitedFF"/>
			<flow-ref name="getAmericanFF" doc:name="getAmericanFF"/>
		</scatter-gather>
		<dw:transform-message doc:name="Transform Message">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
flatten payload]]></dw:set-payload>
		</dw:transform-message>
		<logger level="INFO" doc:name="Logger"/>
	</flow>
</mule>
